@import '~hds-design-tokens/lib/all.scss';
//
//  MEDIA QUERIES
//––––––––––––––––––––––––––––––––––––––––––––––––––
// A map of breakpoints.
$breakpoints: (
  xs: $breakpoint-xs,
  s: $breakpoint-s,
  m: $breakpoint-m,
  l: $breakpoint-l,
  xl: $breakpoint-xl,
);
//
//  RESPOND ABOVE
//––––––––––––––––––––––––––––––––––––––––––––––––––
// @include respond-above(sm) {}

@mixin respond-above($breakpoint) {
  // If the breakpoint exists in the map.

  @if map-has-key($breakpoints, $breakpoint) {
    // Get the breakpoint value.

    $breakpoint-value: map-get($breakpoints, $breakpoint);
    // Write the media query.

    @media (min-width: $breakpoint-value) {
      @content;
    }

    // If the breakpoint doesn't exist in the map.

    /* stylelint-disable */
  } @else {
    // Log a warning.

    /* stylelint-enable */

    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}

@mixin respond-below($breakpoint) {
  // If the breakpoint exists in the map.

  @if map-has-key($breakpoints, $breakpoint) {
    // Get the breakpoint value.

    $breakpoint-value: map-get($breakpoints, $breakpoint);
    // Write the media query.

    @media (max-width: $breakpoint-value) {
      @content;
    }

    // If the breakpoint doesn't exist in the map.

    /* stylelint-disable */
  } @else {
    // Log a warning.

    /* stylelint-enable */
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}
